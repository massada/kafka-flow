"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6084],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6077:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:5},a="Compression",s={unversionedId:"guides/compression",id:"guides/compression",title:"Compression",description:"In this section, we will learn how to configure Producer Compression in KafkaFlow.",source:"@site/docs/guides/compression.md",sourceDirName:"guides",slug:"/guides/compression",permalink:"/kafkaflow/docs/guides/compression",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/guides/compression.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Compressor Middleware",permalink:"/kafkaflow/docs/guides/middlewares/compressor-middleware"},next:{title:"Logging",permalink:"/kafkaflow/docs/guides/logging"}},p={},l=[],c={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compression"},"Compression"),(0,o.kt)("p",null,"In this section, we will learn how to configure Producer Compression in KafkaFlow."),(0,o.kt)("p",null,"KafkaFlow relies on the native message compression provided by the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/confluentinc/confluent-kafka-dotnet"},"Confluent Kafka client"),". "),(0,o.kt)("p",null,"The following compression types are supported:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Gzip"),(0,o.kt)("li",{parentName:"ul"},"Snappy"),(0,o.kt)("li",{parentName:"ul"},"Lz4"),(0,o.kt)("li",{parentName:"ul"},"Zstd")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},".WithCompression(CompressionType.Gzip)\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you want to use a different compression type, visit the ",(0,o.kt)("a",{parentName:"p",href:"middlewares/compressor-middleware"},"Compressor Middleware guide"),".")),(0,o.kt)("p",null,"Optionally, it's possible to specify the compression level, providing it as the second argument.\nYou can find the possible values ",(0,o.kt)("a",{parentName:"p",href:"https://docs.confluent.io/platform/current/clients/confluent-kafka-dotnet/_site/api/Confluent.Kafka.ProducerConfig.html#Confluent_Kafka_ProducerConfig_CompressionLevel"},"here"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},".WithCompression(CompressionType.Gzip, 5)\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The configuration must be done only by the producers. The consumers will identify compressed messages and decompress them automatically.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'services.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddProducer<ProductEventsProducer>(producer => producer\n            .WithCompression(CompressionType.Gzip)\n                ...\n            )\n        )\n    )\n);\n')))}u.isMDXComponent=!0}}]);