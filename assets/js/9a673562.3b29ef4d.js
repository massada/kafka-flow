"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5272],{4071:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>n,toc:()=>i});var r=s(85893),t=s(11151);const c={},o="ISchemaRegistryTypeNameResolver.ResolveAsync method",n={id:"reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync",title:"ISchemaRegistryTypeNameResolver.ResolveAsync method",description:"Resolve the message type name of a schema",source:"@site/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync.md",sourceDirName:"reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver",slug:"/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ISchemaRegistryTypeNameResolver interface",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/"},next:{title:"SchemaRegistryTypeResolver constructor",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/SchemaRegistryTypeResolver/"}},l={},i=[{value:"See Also",id:"see-also",level:2}];function h(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"ischemaregistrytypenameresolverresolveasync-method",children:"ISchemaRegistryTypeNameResolver.ResolveAsync method"}),"\n",(0,r.jsx)(a.p,{children:"Resolve the message type name of a schema"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-csharp",children:"public Task<string> ResolveAsync(int schemaId)\n"})}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"parameter"}),(0,r.jsx)(a.th,{children:"description"})]})}),(0,r.jsx)(a.tbody,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"schemaId"}),(0,r.jsx)(a.td,{children:"Identifier of the schema"})]})})]}),"\n",(0,r.jsx)(a.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["interface\xa0",(0,r.jsx)(a.a,{href:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/",children:"ISchemaRegistryTypeNameResolver"})]}),"\n",(0,r.jsxs)(a.li,{children:["namespace\xa0",(0,r.jsx)(a.a,{href:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/",children:"KafkaFlow"})]}),"\n"]})]})}function m(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,a,s)=>{s.d(a,{Z:()=>n,a:()=>o});var r=s(67294);const t={},c=r.createContext(t);function o(e){const a=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function n(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);