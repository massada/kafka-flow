"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[504],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>p});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var f=a.createContext({}),i=function(e){var t=a.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=i(e.components);return a.createElement(f.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,f=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=i(r),p=n,k=m["".concat(f,".").concat(p)]||m[p]||u[p]||o;return r?a.createElement(k,s(s({ref:t},c),{},{components:r})):a.createElement(k,s({ref:t},c))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var f in t)hasOwnProperty.call(t,f)&&(l[f]=t[f]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var i=2;i<o;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},726:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const o={},s="IMessageConsumer.GetWatermarkOffsets method",l={unversionedId:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets",id:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets",title:"IMessageConsumer.GetWatermarkOffsets method",description:"Get the last cached low (oldest available / beginning) and high (newest/end) offsets for a topic/partition. Does not block.",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer",slug:"/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetWatermarkOffsets.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IMessageConsumer.GetTopicPartitionsLag method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GetTopicPartitionsLag"},next:{title:"IMessageConsumer.GroupId property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/GroupId"}},f={},i=[{value:"Return Value",id:"return-value",level:2},{value:"Remarks",id:"remarks",level:2},{value:"See Also",id:"see-also",level:2}],c={toc:i};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"imessageconsumergetwatermarkoffsets-method"},"IMessageConsumer.GetWatermarkOffsets method"),(0,n.kt)("p",null,"Get the last cached low (oldest available / beginning) and high (newest/end) offsets for a topic/partition. Does not block."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"public WatermarkOffsets GetWatermarkOffsets(TopicPartition topicPartition)\n")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"topicPartition"),(0,n.kt)("td",{parentName:"tr",align:null},"The topic partition of interest.")))),(0,n.kt)("h2",{id:"return-value"},"Return Value"),(0,n.kt)("p",null,"The requested WatermarkOffsets (see that class for additional documentation)."),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("p",null,"The low offset is updated periodically (if statistics.interval.ms is set) while the high offset is updated on each fetched message set from the broker. If there is no cached offset (either low or high, or both) then Offset.Unset will be returned for the respective offset."),(0,n.kt)("h2",{id:"see-also"},"See Also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"interface\xa0",(0,n.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/"},"IMessageConsumer")),(0,n.kt)("li",{parentName:"ul"},"namespace\xa0",(0,n.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/"},"KafkaFlow.Consumers"))))}u.isMDXComponent=!0}}]);