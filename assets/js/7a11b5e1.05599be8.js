"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2669],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),y=c(r),m=a,p=y["".concat(u,".").concat(m)]||y[m]||f[m]||o;return r?n.createElement(p,i(i({ref:t},l),{},{components:r})):n.createElement(p,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},7767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={},i="BytesSumDistributionStrategy constructor",s={unversionedId:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/BytesSumDistributionStrategy",id:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/BytesSumDistributionStrategy",title:"BytesSumDistributionStrategy constructor",description:"The default constructor.",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/BytesSumDistributionStrategy.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy",slug:"/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/BytesSumDistributionStrategy.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TopicPartitionLag.Topic property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/TopicPartitionLag/Topic"},next:{title:"BytesSumDistributionStrategy.GetWorkerAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync"}},u={},c=[{value:"See Also",id:"see-also",level:2}],l={toc:c};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bytessumdistributionstrategy-constructor"},"BytesSumDistributionStrategy constructor"),(0,a.kt)("p",null,"The default constructor."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public BytesSumDistributionStrategy()\n")),(0,a.kt)("h2",{id:"see-also"},"See Also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"class\xa0",(0,a.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/"},"BytesSumDistributionStrategy")),(0,a.kt)("li",{parentName:"ul"},"namespace\xa0",(0,a.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/"},"KafkaFlow.Consumers.DistributionStrategies"))))}f.isMDXComponent=!0}}]);