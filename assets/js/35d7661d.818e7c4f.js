"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9575],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var f=r.createContext({}),u=function(e){var t=r.useContext(f),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return r.createElement(f.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,f=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(a),d=n,c=m["".concat(f,".").concat(d)]||m[d]||k[d]||o;return a?r.createElement(c,i(i({ref:t},s),{},{components:a})):r.createElement(c,i({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var f in t)hasOwnProperty.call(t,f)&&(l[f]=t[f]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8541:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>f,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const o={},i="IConsumerConfiguration interface",l={unversionedId:"reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/IConsumerConfiguration",id:"reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/IConsumerConfiguration",title:"IConsumerConfiguration interface",description:"Represents the Consumer configuration values",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/IConsumerConfiguration.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration",slug:"/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/IConsumerConfiguration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClusterConfiguration.TopicsToCreateIfNotExist property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/ClusterConfiguration/TopicsToCreateIfNotExist"},next:{title:"IConsumerConfiguration.AutoCommitInterval property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/AutoCommitInterval"}},f={},u=[{value:"Members",id:"members",level:2},{value:"See Also",id:"see-also",level:2}],s={toc:u};function k(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"iconsumerconfiguration-interface"},"IConsumerConfiguration interface"),(0,n.kt)("p",null,"Represents the Consumer configuration values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface IConsumerConfiguration\n")),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"name"),(0,n.kt)("th",{parentName:"tr",align:null},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/AutoCommitInterval"},"AutoCommitInterval"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the interval between commits")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/AutoStoreOffsets"},"AutoStoreOffsets"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets a value indicating whether if the application should store store at the end")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/BufferSize"},"BufferSize"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the buffer size used for each worker")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/ClusterConfiguration"},"ClusterConfiguration"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the cluster configuration")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/ConsumerName"},"ConsumerName"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer name")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/CustomFactory"},"CustomFactory"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the custom factory used to create a new ",(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IConsumer/"},(0,n.kt)("inlineCode",{parentName:"a"},"IConsumer")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/DistributionStrategyFactory"},"DistributionStrategyFactory"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer worker distribution strategy")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/GroupId"},"GroupId"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer group")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/InitialState"},"InitialState"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer initial state")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/ManagementDisabled"},"ManagementDisabled"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets a value indicating whether the consumer is able to be manageable or not")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/MiddlewaresConfigurations"},"MiddlewaresConfigurations"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer middlewares configurations")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/PartitionsAssignedHandlers"},"PartitionsAssignedHandlers"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the handlers that will be called when the partitions are assigned")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/PartitionsRevokedHandlers"},"PartitionsRevokedHandlers"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the handlers that will be called when the partitions are revoked")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/PendingOffsetsHandlers"},"PendingOffsetsHandlers"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the handlers that will be called when there are pending offsets")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/StatisticsHandlers"},"StatisticsHandlers"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the handlers used to collects statistics")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/Topics"},"Topics"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the consumer configured topics")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/WorkersCount"},"WorkersCount"),"\xa0{\xa0get;\xa0set;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets or sets the number of workers")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/WorkerStopTimeout"},"WorkerStopTimeout"),"\xa0{\xa0get;\xa0}"),(0,n.kt)("td",{parentName:"tr",align:null},"Gets the time that the worker will wait to process the buffered messages before canceling the WorkerStopped")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Configuration/IConsumerConfiguration/GetKafkaConfig"},"GetKafkaConfig"),"()"),(0,n.kt)("td",{parentName:"tr",align:null},"Parses KafkaFlow configuration to Confluent configuration")))),(0,n.kt)("h2",{id:"see-also"},"See Also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"namespace\xa0",(0,n.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/"},"KafkaFlow.Configuration"))))}k.isMDXComponent=!0}}]);