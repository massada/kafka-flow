"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[296],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),y=l(r),m=o,p=y["".concat(u,".").concat(m)]||y[m]||f[m]||a;return r?n.createElement(p,i(i({ref:t},c),{},{components:r})):n.createElement(p,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6796:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},i="BytesSumDistributionStrategy.GetWorkerAsync method",s={unversionedId:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync",id:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync",title:"BytesSumDistributionStrategy.GetWorkerAsync method",description:"See Also",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy",slug:"/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/GetWorkerAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BytesSumDistributionStrategy constructor",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/"},next:{title:"BytesSumDistributionStrategy.Init method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/Init"}},u={},l=[{value:"See Also",id:"see-also",level:2}],c={toc:l};function f(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bytessumdistributionstrategygetworkerasync-method"},"BytesSumDistributionStrategy.GetWorkerAsync method"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public Task<IWorker> GetWorkerAsync(byte[] partitionKey, CancellationToken cancellationToken)\n")),(0,o.kt)("h2",{id:"see-also"},"See Also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"class\xa0",(0,o.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers.DistributionStrategies/BytesSumDistributionStrategy/"},"BytesSumDistributionStrategy")),(0,o.kt)("li",{parentName:"ul"},"namespace\xa0",(0,o.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow/"},"KafkaFlow.Consumers.DistributionStrategies"))))}f.isMDXComponent=!0}}]);