"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9099],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>m});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function d(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=n.createContext({}),s=function(e){var a=n.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):d(d({},a),e)),r},p=function(e){var a=s(e.components);return n.createElement(i.Provider,{value:a},e.children)},f={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(r),m=t,c=u["".concat(i,".").concat(m)]||u[m]||f[m]||l;return r?n.createElement(c,d(d({ref:a},p),{},{components:r})):n.createElement(c,d({ref:a},p))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=r.length,d=new Array(l);d[0]=u;var o={};for(var i in a)hasOwnProperty.call(a,i)&&(o[i]=a[i]);o.originalType=e,o.mdxType="string"==typeof e?e:t,d[1]=o;for(var s=2;s<l;s++)d[s]=r[s];return n.createElement.apply(null,d)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3761:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(7462),t=(r(7294),r(3905));const l={},d="TypedHandlerConfigurationBuilder.AddHandlersFromAssemblyOf method (1 of 2)",o={unversionedId:"reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf",id:"reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf",title:"TypedHandlerConfigurationBuilder.AddHandlersFromAssemblyOf method (1 of 2)",description:"Adds all classes that implements the IMessageHandler interface from the assemblies of the provided types",source:"@site/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf.md",sourceDirName:"reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder",slug:"/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf",permalink:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlersFromAssemblyOf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TypedHandlerConfigurationBuilder.AddHandlers method",permalink:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/AddHandlers"},next:{title:"TypedHandlerConfigurationBuilder.WhenNoHandlerFound method",permalink:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/WhenNoHandlerFound"}},i={},s=[{value:"See Also",id:"see-also",level:2},{value:"See Also",id:"see-also-1",level:2}],p={toc:s};function f(e){let{components:a,...r}=e;return(0,t.kt)("wrapper",(0,n.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"typedhandlerconfigurationbuilderaddhandlersfromassemblyof-method-1-of-2"},"TypedHandlerConfigurationBuilder.AddHandlersFromAssemblyOf method (1 of 2)"),(0,t.kt)("p",null,"Adds all classes that implements the ",(0,t.kt)("a",{parentName:"p",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/IMessageHandler-1/"},(0,t.kt)("inlineCode",{parentName:"a"},"IMessageHandler"))," interface from the assemblies of the provided types"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csharp"},"public TypedHandlerConfigurationBuilder AddHandlersFromAssemblyOf(params Type[] assemblyMarkerTypes)\n")),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",{parentName:"tr",align:null},"parameter"),(0,t.kt)("th",{parentName:"tr",align:null},"description"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:null},"assemblyMarkerTypes"),(0,t.kt)("td",{parentName:"tr",align:null},"Types contained in the assemblies to be searched")))),(0,t.kt)("h2",{id:"see-also"},"See Also"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"class\xa0",(0,t.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/"},"TypedHandlerConfigurationBuilder")),(0,t.kt)("li",{parentName:"ul"},"namespace\xa0",(0,t.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/"},"KafkaFlow.TypedHandler"))),(0,t.kt)("hr",null),(0,t.kt)("h1",{id:"typedhandlerconfigurationbuilderaddhandlersfromassemblyoft-method-2-of-2"},"TypedHandlerConfigurationBuilder.AddHandlersFromAssemblyOf","<","T",">"," method (2 of 2)"),(0,t.kt)("p",null,"Adds all classes that implements the ",(0,t.kt)("a",{parentName:"p",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/IMessageHandler-1/"},(0,t.kt)("inlineCode",{parentName:"a"},"IMessageHandler"))," interface from the assembly of the provided type"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csharp"},"public TypedHandlerConfigurationBuilder AddHandlersFromAssemblyOf<T>()\n")),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",{parentName:"tr",align:null},"parameter"),(0,t.kt)("th",{parentName:"tr",align:null},"description"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:null},"T"),(0,t.kt)("td",{parentName:"tr",align:null},"A type that implements the ",(0,t.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/IMessageHandler-1/"},(0,t.kt)("inlineCode",{parentName:"a"},"IMessageHandler"))," interface")))),(0,t.kt)("h2",{id:"see-also-1"},"See Also"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"class\xa0",(0,t.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/KafkaFlow.TypedHandler/TypedHandlerConfigurationBuilder/"},"TypedHandlerConfigurationBuilder")),(0,t.kt)("li",{parentName:"ul"},"namespace\xa0",(0,t.kt)("a",{parentName:"li",href:"/kafkaflow/docs/reference/KafkaFlow.TypedHandler/"},"KafkaFlow.TypedHandler"))))}f.isMDXComponent=!0}}]);